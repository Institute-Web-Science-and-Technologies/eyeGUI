### VERSION 0.3
- Bug with grid and dynamic scale
  - Fails when container in container and inner element does adaptive scaling

### VERSION 0.4
- TextInput
- Code cleanup with visual

### VERSION 0.x
- Uniform locations of texture slots not used! (may be problem if there is more than one in use at once)
- Function to define search folder or so
- Encoding stuff
	- Different XML library -> UTF8 works even in xeyegui
	- Use UTF8 library also for config and stylesheet?
- More complex input structure and configuration
  - Mouse
  - Keyboard
  - Eyetracker
  - Brain-computer-interface
  - Buttons?
  - Other...
- Audio
- Right to left text (hebrew)
	- Maybe detect hebrew characters and react
- Localization reloading on the fly (all textflows would have to be recalculated, maybe other default font...)
- Font has sometimes little rendering issues

Notes:
- Localization files MUST BE encoded in UTF-8
- Element's mBorderAspectRatio for avoiding borders to kill aspect ratio only used in picture at the moment
- maybe switch to double to accumulate time. otherwise, every half hour there will be flickering
- Reminder: Parser responsible for value ranges!
- Precaching of textures (maybe write something to an text file)
- Event functions, which return boolean telling whether input was processed (mouse, keyboard...eye? brain...? multitouch) -> how to make flexible -> using transferobject?
- Maybe use sampler states for textures instead of per texture settings
- Reminder: XML may not contain information about current state (activity, hiding etc!!!)
- Rasterization of SVGs are depending on DPI at the moment
- No mixing of buttons / sensors and text. Text should be never penetrateable by gaze (but maybe clickable)
- Strange or hacky: Since OGL functions are loaded already by the library, what happens in the main program doing the same? Seems to work at least...
- Stack
  - Non used pixels should be better shared among all elements not only the head in stack -> very difficult stuff
- Reminder: Namespaces easier because Layout and GUI is visible to outer space
- Mapping of images / icons would be cool (easy exchange in whole application) (path without .png or .svg is interperted as mapping)
- Input
  - Reminder: can be NULL if irrelevant for Element
  - Maybe blocks have an option: kill or not kill input (both possible)
  - is selecting via keyboard input? (at the moment it is not blocked if input is disabled for layout)
- Text
	- Tooltips
	- Make listening elements (analog to notifier template) using pointer, function or method getter to get values like floats or strings for displaying

If bored:
- Some members of element could be private but getters necessary..
